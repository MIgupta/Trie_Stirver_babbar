class TrieNode{
        public:
        TrieNode *children[2];

        TrieNode()
        {
            this->children[0]=NULL;
            this->children[1]=NULL;
        }
};    
class Solution {
public:
    TrieNode* root=new TrieNode();
        void insert(int x)
        {
            TrieNode* t=root;
            bitset<32> bs(x);
            for(int i=31;i>=0;i--)
            {
                if(!t->children[bs[i]])
                {
                    t->children[bs[i]]=new TrieNode();
                }
                t=t->children[bs[i]];
            }
        }
    int mxor(int x)
    {
        TrieNode* t=root;
        int ans=0;
        bitset<32> bs(x);
        for(int j=31;j>=0;j--)
        {
            if(t->children[!bs[j]])
            {
                ans+=1<<j;
                t=t->children[!bs[j]];
            }
            else
            {
                t=t->children[bs[j]];
            }
        }
        return ans;
    }
    int findMaximumXOR(vector<int>& nums) {
         

        for(auto &x:nums)
        {
            insert(x);
        }
        int ans=0;
        for(auto x:nums)
        {
            ans=max(ans,mxor(x));
        }
        return ans;
    }
};